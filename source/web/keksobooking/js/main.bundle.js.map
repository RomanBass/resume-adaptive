{"version":3,"sources":["webpack://keksobooking/./source/js/util.js","webpack://keksobooking/./source/js/card.js","webpack://keksobooking/./source/js/form-validation.js","webpack://keksobooking/./source/js/form.js","webpack://keksobooking/./source/js/filter.js","webpack://keksobooking/./source/js/page-activation.js","webpack://keksobooking/./source/js/map.js","webpack://keksobooking/./source/js/photo.js","webpack://keksobooking/./source/js/server.js","webpack://keksobooking/./source/js/main.js"],"names":["TokyoCenterView","cardTemplate","document","querySelector","content","minPrice","estateObjectType","priceInputHandler","price","priceInput","value","setCustomValidity","reportValidity","synchronizeSelectors","firstSelector","secondSelector","matchRoomsAndGuests","roomsNumber","guestsNumber","main","formSuccessTemplate","formErrorTemplate","formSuccessNotice","cloneNode","formErrorNotice","titleInput","housingTypeSelector","entrySelector","departureSelector","addressInput","roomsNumberSelector","guestsNumberSelector","formResetButton","formFieldSets","querySelectorAll","addEventListener","valueLength","length","validity","valueMissing","evt","target","placeholder","throwErrorNotice","errorMessage","formErrorNoticeText","appendChild","textContent","formErrorClickHandler","contains","removeChild","removeEventListener","formErrorEscKeydownHandler","evtKeydown","key","setAddress","latitude","longitude","readOnly","filterForm","filters","deactivatePage","deactivator","classList","add","remove","forEach","fieldSet","disabled","deactivateForm","filter","deactivateFilters","map","L","on","setView","lat","lng","tileLayer","attribution","addTo","mainPinIcon","icon","iconUrl","iconSize","iconAnchor","mainPinMarker","marker","draggable","resetMainPinPosition","setLatLng","MainMarkerCoordinates","getLatLng","formAddressLatitude","Math","round","formAddressLongitude","PinIcon","pinsLayerGroup","layerGroup","renderPins","estateObjects","getLayers","clearLayers","slice","element","PinMarker","location","bindPopup","estateObject","newCard","possibleFeaturesList","featuresList","offer","features","photoGallery","photosList","photos","descriptionSection","descriptionText","description","src","author","avatar","title","address","rooms","guests","checkin","checkout","type","innerHTML","feature","insertAdjacentHTML","photo","renderCard","addLayer","FILE_TYPES","avatarFileChooser","avatarPreview","housingFileChooser","housingPreviewBlock","callback","onSuccess","onError","file","files","fileName","name","toLowerCase","some","ending","endsWith","reader","FileReader","result","readAsDataURL","throwSuccessNotice","successMessageClickHandler","reset","successMessageEscKeydownHandler","preventDefault","formData","FormData","fetch","method","body","then","response","ok","status","statusText","catch","err","handleFormSubmission","data","cb","dataToFilter","_","debounce","filteredOffers","housingType","changeHousingType","indicator","changePriceRange","housingRooms","parseInt","changeHousingRooms","housingGuests","changeHousingGuests","facilitiesArray","i","checked","includes","facilitiesChangeHandler","message","node","createElement","style","position","left","right","zIndex","top","width","fontSize","insertAdjacentElement","json","Error"],"mappings":"mBAAA,MAAMA,EACM,SADNA,EAEO,UCYPC,EAAeC,SAASC,cAAc,SAASC,QAAQD,cAAc,UCe3E,IAAIE,EAAW,IACXC,EAAmB,WAEhB,MAoBMC,EAAoB,KAC/B,MAAMC,EAAQC,EAAWC,MACrBF,EAlDY,IAmDdC,EAAWE,kBAAkB,sCACpBH,EAAQH,EACjBI,EAAWE,kBAAkB,UAAUN,qBAA4BC,oBAEnEG,EAAWE,kBAAkB,IAE/BF,EAAWG,kBAgCAC,EAAuB,CAACC,EAAeC,KAClDA,EAAeL,MAAQI,EAAcJ,OAG1BM,EAAsB,CAACC,EAAaC,KA5FN,QA6FrCD,EAAYP,OA5FyB,MA4FuBQ,EAAaR,MAC3EQ,EAAaP,kBAAkB,8DA9FQ,QA+F9BM,EAAYP,OA9FkB,MA8F8BQ,EAAaR,MAClFQ,EAAaP,kBAAkB,wEACtBM,EAAYP,MAAQQ,EAAaR,MAC1CQ,EAAaP,kBAAkB,4DAE/BO,EAAaP,kBAAkB,IAEjCO,EAAaN,kBCtGTO,EAAOjB,SAASC,cAAc,QAC9BiB,EAAsBlB,SAASC,cAAc,YAAYC,QAAQD,cAAc,YAC/EkB,EAAoBnB,SAASC,cAAc,UAAUC,QAAQD,cAAc,UAC3EmB,EAAoBF,EAAoBG,WAAU,GAClDC,EAAkBH,EAAkBE,WAAU,GAC9C,EAAOrB,SAASC,cAAc,YAC9BsB,EAAa,EAAKtB,cAAc,UAChCuB,EAAsB,EAAKvB,cAAc,SACzCM,EAAa,EAAKN,cAAc,UAChCwB,EAAgB,EAAKxB,cAAc,WACnCyB,EAAoB,EAAKzB,cAAc,YACvC0B,EAAe,EAAK1B,cAAc,YAClC2B,EAAsB,EAAK3B,cAAc,gBACzC4B,EAAuB,EAAK5B,cAAc,aAC1C6B,EAAkB,EAAK7B,cAAc,mBACrC8B,EAAgB,EAAKC,iBAAiB,YAE5CT,EAAWU,iBAAiB,SDUK,KAC/B,MAAMC,EAAcX,EAAWf,MAAM2B,OAEjCD,EAjCmB,GAkCrBX,EAAWd,kBAAkB,aAlCR,GAkC0CyB,GAAe,UACrEA,EAlCY,IAmCrBX,EAAWd,kBAAkB,YAAcyB,EAnCtB,KAmCwD,UAE7EX,EAAWd,kBAAkB,IAG/Bc,EAAWb,oBCpBba,EAAWU,iBAAiB,WDuBO,KAC7BV,EAAWa,SAASC,cACtBd,EAAWd,kBAAkB,8CCxBjCe,EAAoBS,iBAAiB,UDwCGK,IACtC,OAAQA,EAAIC,OAAO/B,OACjB,IAzDQ,WA0DNL,EA5CM,EA6CNC,EApDM,UAqDN,MACF,IA5DI,OA6DFD,EA/CE,IAgDFC,EAvDE,WAwDF,MACF,IA/DK,QAgEHD,EAlDG,IAmDHC,EA1DG,MA2DH,MACF,IAlEM,SAmEJD,EArDI,IAsDJC,EA7DI,SAgERG,EAAWiC,YAAcrC,EACzBE,OC3DFE,EAAW0B,iBAAiB,QAAS5B,GAErCE,EAAW0B,iBAAiB,WD4DO,KAC7B1B,EAAW6B,SAASC,cACtB9B,EAAWE,kBAAkB,kDC7DjCiB,EAAkBO,iBAAiB,UAAU,KAC3CtB,EAAqBe,EAAmBD,MAG1CA,EAAcQ,iBAAiB,UAAU,KACvCtB,EAAqBc,EAAeC,MAGtCZ,EAAoBc,EAAqBC,GACzCA,EAAqBI,iBAAiB,UAAU,KAC9CnB,EAAoBc,EAAqBC,MAE3CD,EAAoBK,iBAAiB,UAAU,KAC7CnB,EAAoBc,EAAqBC,MAGpC,MA8CDY,EAAoBC,IAExB,MAAMC,EAAsB3C,SAASC,cAAc,mBAEnDgB,EAAK2B,YAAYtB,GACjBqB,EAAoBE,YAAcH,EAElC,MAAMI,EAAwB,KACxB7B,EAAK8B,SAASzB,IAChBL,EAAK+B,YAAY1B,GAEnBtB,SAASiD,oBAAoB,QAASH,GACtC9C,SAASiD,oBAAoB,UAAWC,IAG1ClD,SAASiC,iBAAiB,QAASa,GAEnC,MAAMI,EAA8BC,IACX,WAAnBA,EAAWC,KAAoBnC,EAAK8B,SAASzB,IAC/CL,EAAK+B,YAAY1B,GAEnBtB,SAASiD,oBAAoB,QAASH,GACtC9C,SAASiD,oBAAoB,UAAWC,IAG1ClD,SAASiC,iBAAiB,UAAWiB,IAI1BG,EAAa,CAACC,EAAUC,KACnC5B,EAAanB,MAAQ,GAAG8C,MAAaC,KAgBvC5B,EAAa6B,UAAW,EACxB7C,EAAqBc,EAAeC,GCzIpC,MAYM+B,EAAazD,SAASC,cAAc,iBACpCyD,EAAUD,EAAWzB,iBAAiB,oBCVtC2B,EAAkBC,IFwHM,CAACA,IACzBA,EACF,EAAKC,UAAUC,IAAI,qBAGnB,EAAKD,UAAUE,OAAO,qBAGxBhC,EAAciC,SAASC,IACrBA,EAASC,SAAWN,MEhItBO,CAAgBP,GDWQ,CAACA,IACrBA,EACFH,EAAWI,UAAUC,IAAI,0BAEzBL,EAAWI,UAAUE,OAAO,0BAG9BL,EAAQM,SAASI,IACfA,EAAOF,SAAWN,MClBpBS,CAAkBT,IAGpBD,GAAe,GCFf,MAGMW,EAAMC,EAAED,IAAI,cACfE,GAAG,QAAQ,KACVb,GAAe,MAEhBc,QAAQ,CACPC,IAAK5E,EACL6E,IAAK7E,GNZD,GMeRyE,EAAEK,UACA,qDACA,CACEC,YAAa,4FAEfC,MAAMR,GAER,MAAMS,EAAcR,EAAES,KAAK,CACzBC,QAAS,qBACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAGbC,EAAgBb,EAAEc,OACtB,CACEX,IAAK5E,EACL6E,IAAK7E,GAEP,CACEwF,WAAW,EACXN,KAAMD,IAIGQ,EAAuB,KAClCH,EAAcI,UAAU,CACtBd,IAAK5E,EACL6E,IAAK7E,IAEPwE,EAAIG,QAAQ,CACVC,IAAK5E,EACL6E,IAAK7E,GN9CD,IMkDRsF,EAAcN,MAAMR,GAEpBjB,EAAWvD,EAA0BA,GAErCsF,EAAcZ,GAAG,QAASlC,IACxB,MAAMmD,EACMnD,EAAIC,OAAOmD,YAAYhB,IAD7Be,EAEOnD,EAAIC,OAAOmD,YAAYf,IAG9BgB,EAAsBC,KAAKC,MAAMJ,EAAiC,IAFxD,GAEoG,IAFpG,EAGVK,EAAuBF,KAAKC,MAAMJ,EAAkC,IAH1D,GAGsG,IAHtG,EAIhBpC,EAAWsC,EAAqBG,MAGlC,MAAMC,EAAUxB,EAAES,KAAK,CACrBC,QAAS,gBACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAGba,EAAiBzB,EAAE0B,aACtBnB,MAAMR,GAEH4B,EAAcC,IAEdH,EAAeI,YAAYjE,QAC7B6D,EAAeK,cAGjBF,EAAcG,MA5EoB,EADN,IA6E4CtC,SAASuC,IAC/E,MAAMC,EAAYjC,EAAEc,OAClB,CACEX,IAAK6B,EAAQE,SAAS/B,IACtBC,IAAK4B,EAAQE,SAAS9B,KAExB,CACEK,KAAMe,IAIVS,EACGE,UL/EY,CAACC,IAClB,MAAMC,EAAU7G,EAAasB,WAAU,GACjCwF,EAAuBD,EAAQ3G,cAAc,oBAC7C6G,EAAeH,EAAaI,MAAMC,SAClCC,EAAeL,EAAQ3G,cAAc,kBACrCiH,EAAaP,EAAaI,MAAMI,OAChCC,EAAqBR,EAAQ3G,cAAc,uBAC3CoH,EAAkBV,EAAaI,MAAMO,YAe3C,OAbAV,EAAQ3G,cAAc,OAAOsH,IAAMZ,EAAaa,OAAOC,OACvDb,EAAQ3G,cAAc,iBAAiB4C,YAAc8D,EAAaI,MAAMW,MACxEd,EAAQ3G,cAAc,yBAAyB4C,YAAc8D,EAAaI,MAAMY,QAChFf,EAAQ3G,cAAc,uBAAuB4C,YAAc,GAAG8D,EAAaI,MAAMzG,cACjFsG,EAAQ3G,cAAc,0BAA0B4C,YAAc,GAAG8D,EAAaI,MAAMa,qBAAqBjB,EAAaI,MAAMc,gBAC5HjB,EAAQ3G,cAAc,sBAAsB4C,YAAc,eAAe8D,EAAaI,MAAMe,qBAAqBnB,EAAaI,MAAMgB,WAE/HV,EAGHD,EAAmBvE,YAAcwE,EAFjCD,EAAmBrD,SAKb4C,EAAaI,MAAMiB,MACzB,IAtCQ,WAuCNpB,EAAQ3G,cAAc,gBAAgB4C,YAhChC,UAiCN,MACF,IAxCI,OAyCF+D,EAAQ3G,cAAc,gBAAgB4C,YAlCpC,WAmCF,MACF,IA1CK,QA2CH+D,EAAQ3G,cAAc,gBAAgB4C,YApCnC,MAqCH,MACF,IA5CM,SA6CJ+D,EAAQ3G,cAAc,gBAAgB4C,YAtClC,SA8DR,OApBKiE,EAAa3E,QAGhB0E,EAAqBoB,UAAY,GACjCnB,EAAa9C,SAASuC,IACpB,MAAM2B,EAAU,6CAA6C3B,WAC7DM,EAAqBsB,mBAAmB,YAAaD,OALvDrB,EAAqB9C,SASlBmD,EAAW/E,QAGd8E,EAAagB,UAAY,GACzBf,EAAWlD,SAAQuC,IACjB,MAAM6B,EAAQ,aAAa7B,+EAC3BU,EAAakB,mBAAmB,YAAaC,OAL/CnB,EAAalD,SASR6C,GKuBDyB,CAAW9B,IAGfP,EACGsC,SAAS9B,OClGV+B,EAAa,CAAC,MAAO,MAAO,OAAQ,OACpCC,EAAoB,gBAAmB,oCACvCC,EAAgB,gBAAmB,gCACnCC,EAAqB,gBAAmB,qCACxCC,EAAsB,gBAAmB,mBJ2EZ,IAACC,EKjFnBC,EAAWC,EDQ5BN,EAAkBvG,iBAAiB,UAAU,KAE3C,MAAM8G,EAAOP,EAAkBQ,MAAM,GAC/BC,EAAWF,EAAKG,KAAKC,cAM3B,GAJgBZ,EAAWa,MAAMC,GACxBJ,EAASK,SAASD,KAGd,CACX,MAAME,EAAS,IAAIC,WAEnBD,EAAOtH,iBAAiB,QAAQ,KAC9BwG,EAAclB,IAAMgC,EAAOE,UAE7BF,EAAOG,cAAcX,OAIzBL,EAAmBzG,iBAAiB,UAAU,KAE5C,MAAM8G,EAAOL,EAAmBM,MAAM,GAChCC,EAAWF,EAAKG,KAAKC,cAM3B,GAJgBZ,EAAWa,MAAMC,GACxBJ,EAASK,SAASD,KAGd,CACX,IAAIE,EAAS,IAAIC,WAEjBD,EAAOtH,iBAAiB,QAAQ,KAC9B0G,EAAoBV,UAAY,aAAasB,EAAOE,4DAEtDF,EAAOG,cAAcX,OJEW,CAACH,IACnC,MAAMe,EAAqB,KACzB1I,EAAK2B,YAAYxB,GAEjB,MAAMwI,EAA6B,KAC7B3I,EAAK8B,SAAS3B,KAChBH,EAAK+B,YAAY5B,GACjB,EAAKyI,QACLjB,KAEF5I,SAASiD,oBAAoB,QAAS2G,GACtC5J,SAASiD,oBAAoB,UAAW6G,IAG1C9J,SAASiC,iBAAiB,QAAS2H,GAEnC,MAAME,EAAmC3G,IAChB,WAAnBA,EAAWC,KAAoBnC,EAAK8B,SAAS3B,KAC/CH,EAAK+B,YAAY5B,GACjB,EAAKyI,QACLjB,KAEF5I,SAASiD,oBAAoB,QAAS2G,GACtC5J,SAASiD,oBAAoB,UAAW6G,IAG1C9J,SAASiC,iBAAiB,UAAW6H,IAIvC,EAAK7H,iBAAiB,UAAWK,IAC/BA,EAAIyH,iBACJ,MAAMC,EAAW,IAAIC,SAAS3H,EAAIC,QK5DrB,IAACsG,EAAWC,EAAXD,EL6DLc,EK7DgBb,EL6DIrG,EK5D/ByH,MAAM,mDACJ,CACEC,OAAQ,OACRC,KLyD6CJ,IKtD9CK,MAAMC,IACDA,EAASC,GACX1B,IAEAC,EAAQ,GAAGwB,EAASE,WAAWF,EAASG,mBAG3CC,OAAOC,IACN7B,EAAQ6B,UCnBdC,CAAqBrF,GNqEeqD,EMpEhBrD,ENqElBzD,EAAgBG,iBAAiB,SAAUK,IACzCA,EAAIyH,iBACJ,EAAKF,QACLjB,IACAvF,EAAWvD,EAA0BA,MKtFxB+I,ECedgC,IL0DyB,IAACC,EAAIC,EKzD7B7E,EAAW2E,GLyDcC,EKxDLE,EAAEC,SAAS/E,EAPP,KL+DK6E,EKxDoCF,ELyDnEpH,EAAWxB,iBAAiB,UAAU,KACpC,MAAMiJ,EAAiBH,EAAa3G,QAAQuC,GAhDtB,CAACA,IACzB,MAAMwE,EAAc1H,EAAWxD,cAAc,gCAAgCO,MAC7E,OAAO2K,IAAgBxE,EAAaI,MAAMiB,MAAwB,QAAhBmD,GA+CvCC,CAAkBzE,IA5CN,CAACA,IAExB,IAAI0E,GAAY,EAChB,OAFqB5H,EAAWxD,cAAc,iCAAiCO,OAG7E,IAnCG,MAoCD6K,GAAY,EACZ,MACF,IArCG,MAsCDA,EAAa1E,EAAaI,MAAMzG,OAhC/B,IAiCD,MACF,IAvCM,SAwCJ+K,EAAa1E,EAAaI,MAAMzG,MAnC/B,KAmC8DqG,EAAaI,MAAMzG,MAlChF,IAmCF,MACF,IAzCI,OA0CF+K,EAAa1E,EAAaI,MAAMzG,OArC9B,IAuCN,OAAO+K,GA6BIC,CAAiB3E,IA1BH,CAACA,IAC1B,MAAM4E,EAAe9H,EAAWxD,cAAc,iCAAiCO,MAC/E,OAAOmG,EAAaI,MAAMa,QAAU4D,SAASD,EAAc,KAAwB,QAAjBA,GAyBvDE,CAAmB9E,IAtBJ,CAACA,IAC3B,MAAM+E,EAAgBjI,EAAWxD,cAAc,kCAAkCO,MACjF,OAAOmG,EAAaI,MAAMc,SAAW2D,SAASE,EAAe,KAAyB,QAAlBA,GAqBzDC,CAAoBhF,IAlBD,CAACA,IAC/B,MAAMiF,EAAkBnI,EAAWzB,iBAAiB,2BACpD,IAAIqJ,GAAY,EAChB,IAAK,IAAIQ,EAAI,EAAGA,EAAID,EAAgBzJ,OAAQ0J,IAC1C,GAAID,EAAgBC,GAAGC,UAAYnF,EAAaI,MAAMC,SAAS+E,SAASH,EAAgBC,GAAGrL,OAAQ,CACjG6K,GAAY,EACZ,MAGJ,OAAOA,GAUIW,CAAwBrF,KAEjCmE,EAAGI,OIlFqBpC,ERMFmD,IACxB,MAAMC,EAAOlM,SAASmM,cAAc,OACpCD,EAAKE,MAAQ,6HACbF,EAAKE,MAAMC,SAAW,QACtBH,EAAKE,MAAME,KAAO,EAClBJ,EAAKE,MAAMG,MAAQ,EACnBL,EAAKE,MAAMI,OAAS,EACpBN,EAAKE,MAAMK,IAAM,QACjBP,EAAKE,MAAMM,MAAQ,SACnBR,EAAKE,MAAMO,SAAW,OACtBT,EAAKrJ,YAAcoJ,EACnBjM,SAASoK,KAAKwC,sBAAsB,aAAcV,IQhBlDhC,MAAM,yDACHG,MAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAASuC,OAElB,MAAM,IAAIC,MAAM,GAAGxC,EAASE,WAAWF,EAASG,mBAEjDJ,MAAMQ,IACLhC,EAAUgC,MAEXH,OAAOC,IACN7B,EAAQ6B,O","file":"main.bundle.js","sourcesContent":["const TokyoCenterView = { // координаты центра Токио и начальный масштаб карты\n  LATITUDE: 35.65858,\n  LONGITUDE: 139.74544,\n  ZOOM: 9,\n}\n\nconst showErrorMessage = (message) => {\n  const node = document.createElement('div');\n  node.style = 'border: 5px solid red; z-index: 100; margin: 0 auto; text-align: center; background-color: yellow; color: red; padding: 0;';\n  node.style.position = 'fixed';\n  node.style.left = 0;\n  node.style.right = 0;\n  node.style.zIndex = 3;\n  node.style.top = '595px';\n  node.style.width = '1200px';\n  node.style.fontSize = '50px';\n  node.textContent = message;\n  document.body.insertAdjacentElement('afterbegin', node);\n};\n\nexport {showErrorMessage, TokyoCenterView};\n","const ServerEstateObjectTypeValue = {\n  BUNGALOW: 'bungalow',\n  FLAT: 'flat',\n  HOUSE: 'house',\n  PALACE: 'palace',\n};\n\nconst CardEstateObjectTypeText = {\n  BUNGALOW: 'Бунгало',\n  FLAT: 'Квартира',\n  HOUSE: 'Дом',\n  PALACE: 'Дворец',\n};\n\nconst cardTemplate = document.querySelector('#card').content.querySelector('.popup');\n\nconst renderCard = (estateObject) => {\n  const newCard = cardTemplate.cloneNode(true);\n  const possibleFeaturesList = newCard.querySelector('.popup__features');\n  const featuresList = estateObject.offer.features;\n  const photoGallery = newCard.querySelector('.popup__photos');\n  const photosList = estateObject.offer.photos;\n  const descriptionSection = newCard.querySelector('.popup__description');\n  const descriptionText = estateObject.offer.description;\n\n  newCard.querySelector('img').src = estateObject.author.avatar;\n  newCard.querySelector('.popup__title').textContent = estateObject.offer.title;\n  newCard.querySelector('.popup__text--address').textContent = estateObject.offer.address;\n  newCard.querySelector('.popup__text--price').textContent = `${estateObject.offer.price}₽/ночь`;\n  newCard.querySelector('.popup__text--capacity').textContent = `${estateObject.offer.rooms} комнаты для ${estateObject.offer.guests} гостей`;\n  newCard.querySelector('.popup__text--time').textContent = `Заезд после ${estateObject.offer.checkin}, выезд до ${estateObject.offer.checkout}`;\n\n  if (!descriptionText) {\n    descriptionSection.remove();\n  } else {\n    descriptionSection.textContent = descriptionText;\n  }\n\n  switch (estateObject.offer.type) {\n    case ServerEstateObjectTypeValue.BUNGALOW:\n      newCard.querySelector('.popup__type').textContent = CardEstateObjectTypeText.BUNGALOW;\n      break;\n    case ServerEstateObjectTypeValue.FLAT:\n      newCard.querySelector('.popup__type').textContent = CardEstateObjectTypeText.FLAT;\n      break;\n    case ServerEstateObjectTypeValue.HOUSE:\n      newCard.querySelector('.popup__type').textContent = CardEstateObjectTypeText.HOUSE;\n      break;\n    case ServerEstateObjectTypeValue.PALACE:\n      newCard.querySelector('.popup__type').textContent = CardEstateObjectTypeText.PALACE;\n      break;\n  }\n\n  if (!featuresList.length) {\n    possibleFeaturesList.remove();\n  } else {\n    possibleFeaturesList.innerHTML = '';\n    featuresList.forEach((element => {\n      const feature = `<li class=\"popup__feature popup__feature--${element}\"></li>`;\n      possibleFeaturesList.insertAdjacentHTML('beforeend', feature);\n    }))\n  }\n\n  if (!photosList.length) {\n    photoGallery.remove();\n  } else {\n    photoGallery.innerHTML = '';\n    photosList.forEach(element => {\n      const photo = `<img src=\"${element}\" class=\"popup__photo\" width=\"45\" height=\"40\" alt=\"Фотография жилья\"></img>`;\n      photoGallery.insertAdjacentHTML('beforeend', photo);\n    })\n  }\n\n  return newCard;\n};\n\nexport {renderCard};\n","import {titleInput, priceInput} from './form.js';\n\nconst TITLE_MIN_LENGTH = 30;\nconst TITLE_MAX_LENGTH = 100;\nconst MAX_PRICE = 1000000;\nconst HUNDRED_ROOMS_OPTION_IDENTIFICATOR = '100';\nconst PLACE_NOT_FOR_GUESTS_IDENTIFICATOR = '0';\n\nconst FormEstateObjectTypeValue = {\n  BUNGALOW: 'bungalow',\n  FLAT: 'flat',\n  HOUSE: 'house',\n  PALACE: 'palace',\n}\n\nconst FormEstateObjectTypeText = {\n  BUNGALOW: 'Бунгало',\n  FLAT: 'Квартира',\n  HOUSE: 'Дом',\n  PALACE: 'Дворец',\n}\n\nconst MinPrice = {\n  BUNGALOW: 0,\n  FLAT: 1000,\n  HOUSE: 5000,\n  PALACE: 10000,\n}\n\nlet minPrice = 1000;\nlet estateObjectType = 'Квартира';\n\nexport const titleInputHandler = () => { // функция валидации длины заголовка при его введении\n  const valueLength = titleInput.value.length;\n\n  if (valueLength < TITLE_MIN_LENGTH) {\n    titleInput.setCustomValidity('Добавьте ' + (TITLE_MIN_LENGTH - valueLength) + ' симв.');\n  } else if (valueLength > TITLE_MAX_LENGTH) {\n    titleInput.setCustomValidity('Удалите ' + (valueLength - TITLE_MAX_LENGTH) + ' симв.');\n  } else {\n    titleInput.setCustomValidity('');\n  }\n\n  titleInput.reportValidity();\n};\n\nexport const titleInvalidHandler = () => { // функция валидации наличия заголовка\n  if (titleInput.validity.valueMissing) {\n    titleInput.setCustomValidity('Без заголовка объявление не публикуется');\n  }\n}\n\nexport const priceInputHandler = () => { // функция валидации величины цены\n  const price = priceInput.value;\n  if (price > MAX_PRICE) {\n    priceInput.setCustomValidity('Больше миллиона цена быть не может');\n  } else if (price < minPrice) {\n    priceInput.setCustomValidity(`Меньше ${minPrice} цены на объект \"${estateObjectType}\" быть не может`);\n  } else {\n    priceInput.setCustomValidity('');\n  }\n  priceInput.reportValidity();\n};\n\nexport const PriceRangeChangeHandler = (evt) => { // изменение минимальной цены при изменении типа жилья\n  switch (evt.target.value) {\n    case FormEstateObjectTypeValue.BUNGALOW:\n      minPrice = MinPrice.BUNGALOW;\n      estateObjectType = FormEstateObjectTypeText.BUNGALOW;\n      break;\n    case FormEstateObjectTypeValue.FLAT:\n      minPrice = MinPrice.FLAT;\n      estateObjectType = FormEstateObjectTypeText.FLAT;\n      break;\n    case FormEstateObjectTypeValue.HOUSE:\n      minPrice = MinPrice.HOUSE;\n      estateObjectType = FormEstateObjectTypeText.HOUSE;\n      break;\n    case FormEstateObjectTypeValue.PALACE:\n      minPrice = MinPrice.PALACE;\n      estateObjectType = FormEstateObjectTypeText.PALACE;\n      break;\n  }\n  priceInput.placeholder = minPrice;\n  priceInputHandler(minPrice, estateObjectType); // валидация величины цены\n};\n\nexport const priceInvalidHandler = () => {  // валидация наличия цены\n  if (priceInput.validity.valueMissing) {\n    priceInput.setCustomValidity('Без указания цены объявление не публикуется');\n  }\n};\n\nexport const synchronizeSelectors = (firstSelector, secondSelector) => { // синхронизация двух селекторов\n  secondSelector.value = firstSelector.value;\n};\n\nexport const matchRoomsAndGuests = (roomsNumber, guestsNumber) => {\n  if (roomsNumber.value === HUNDRED_ROOMS_OPTION_IDENTIFICATOR && guestsNumber.value !== PLACE_NOT_FOR_GUESTS_IDENTIFICATOR) {\n    guestsNumber.setCustomValidity('Выбранное помещение не предназначено для проживания гостей');\n  } else if (roomsNumber.value !== HUNDRED_ROOMS_OPTION_IDENTIFICATOR && guestsNumber.value === PLACE_NOT_FOR_GUESTS_IDENTIFICATOR) {\n    guestsNumber.setCustomValidity('Варианту \"не для гостей\" соответствует только помещение в 100 комнат');\n  } else if (roomsNumber.value < guestsNumber.value) {\n    guestsNumber.setCustomValidity('Количество гостей не может быть больше количества комнат');\n  } else {\n    guestsNumber.setCustomValidity('');\n  }\n  guestsNumber.reportValidity();\n};\n","import {titleInputHandler, titleInvalidHandler, priceInputHandler, PriceRangeChangeHandler, priceInvalidHandler,\n  synchronizeSelectors, matchRoomsAndGuests} from './form-validation.js';\nimport {sendData} from './server.js';\nimport {TokyoCenterView} from './util.js';\n\nconst main = document.querySelector('main');\nconst formSuccessTemplate = document.querySelector('#success').content.querySelector('.success');\nconst formErrorTemplate = document.querySelector('#error').content.querySelector('.error');\nconst formSuccessNotice = formSuccessTemplate.cloneNode(true);\nconst formErrorNotice = formErrorTemplate.cloneNode(true);\nconst form = document.querySelector('.ad-form');\nconst titleInput = form.querySelector('#title');\nconst housingTypeSelector = form.querySelector('#type');\nconst priceInput = form.querySelector('#price');\nconst entrySelector = form.querySelector('#timein');\nconst departureSelector = form.querySelector('#timeout');\nconst addressInput = form.querySelector('#address');\nconst roomsNumberSelector = form.querySelector('#room_number');\nconst guestsNumberSelector = form.querySelector('#capacity');\nconst formResetButton = form.querySelector('.ad-form__reset');\nconst formFieldSets = form.querySelectorAll('fieldset');\n\ntitleInput.addEventListener('input', titleInputHandler);\ntitleInput.addEventListener('invalid', titleInvalidHandler);\nhousingTypeSelector.addEventListener('change', PriceRangeChangeHandler);\npriceInput.addEventListener('input', priceInputHandler); // валидация величины цены\n\npriceInput.addEventListener('invalid', priceInvalidHandler);\ndepartureSelector.addEventListener('change', () => {\n  synchronizeSelectors(departureSelector, entrySelector);\n});\n\nentrySelector.addEventListener('change', () => {\n  synchronizeSelectors(entrySelector, departureSelector);\n});\n\nmatchRoomsAndGuests(roomsNumberSelector, guestsNumberSelector);\nguestsNumberSelector.addEventListener('change', () => {\n  matchRoomsAndGuests(roomsNumberSelector, guestsNumberSelector);\n});\nroomsNumberSelector.addEventListener('change', () => {\n  matchRoomsAndGuests(roomsNumberSelector, guestsNumberSelector);\n});\n\nexport const handleFormSubmission = (callback) => {\n  const throwSuccessNotice = () => { // вывод сообщения об успешной отправке формы\n    main.appendChild(formSuccessNotice);\n\n    const successMessageClickHandler = () => {\n      if (main.contains(formSuccessNotice)) {\n        main.removeChild(formSuccessNotice);\n        form.reset();\n        callback();\n      }\n      document.removeEventListener('click', successMessageClickHandler);\n      document.removeEventListener('keydown', successMessageEscKeydownHandler);\n    }\n\n    document.addEventListener('click', successMessageClickHandler);\n\n    const successMessageEscKeydownHandler = (evtKeydown) => {\n      if (evtKeydown.key === 'Escape' && main.contains(formSuccessNotice)) { // блокировка, чтобы не выдавалась ошибка об отсутствии дочернего элемента\n        main.removeChild(formSuccessNotice);\n        form.reset();\n        callback();\n      }\n      document.removeEventListener('click', successMessageClickHandler);\n      document.removeEventListener('keydown', successMessageEscKeydownHandler);\n    }\n\n    document.addEventListener('keydown', successMessageEscKeydownHandler); // закрытие сообщения по нажатию esc\n\n  };\n\n  form.addEventListener('submit', (evt) => {\n    evt.preventDefault();\n    const formData = new FormData(evt.target);\n    sendData(throwSuccessNotice, throwErrorNotice, formData); // отправка данных формы на сервер\n  });\n};\n\nexport const setFormResetHandler = (callback) => {\n  formResetButton.addEventListener('click', (evt) => {\n    evt.preventDefault();\n    form.reset();\n    callback();\n    setAddress(TokyoCenterView.LATITUDE, TokyoCenterView.LONGITUDE);\n  });\n}\n\nconst throwErrorNotice = (errorMessage) => { // вывод сообщения об ошибке при формы\n\n  const formErrorNoticeText = document.querySelector('.error__message'); // извлекаем параграф с сообщением\n\n  main.appendChild(formErrorNotice); // добавление в блок main сообщения об ошибке\n  formErrorNoticeText.textContent = errorMessage; // корректируем сообщение\n\n  const formErrorClickHandler = () => {\n    if (main.contains(formErrorNotice)) {\n      main.removeChild(formErrorNotice);\n    }\n    document.removeEventListener('click', formErrorClickHandler);\n    document.removeEventListener('keydown', formErrorEscKeydownHandler);\n  }\n\n  document.addEventListener('click', formErrorClickHandler);\n\n  const formErrorEscKeydownHandler = (evtKeydown) => {\n    if (evtKeydown.key === 'Escape' && main.contains(formErrorNotice)) { // блокировка, чтобы не выдавалась ошибка об отсутствии дочернего элемента\n      main.removeChild(formErrorNotice);\n    }\n    document.removeEventListener('click', formErrorClickHandler);\n    document.removeEventListener('keydown', formErrorEscKeydownHandler);\n  }\n\n  document.addEventListener('keydown', formErrorEscKeydownHandler); // закрытие сообщения по нажатию esc\n\n};\n\nexport const setAddress = (latitude, longitude) => {\n  addressInput.value = `${latitude}, ${longitude}`; // передача начальных координат главной метки в поле адреса\n};\n\nexport const deactivateForm = (deactivator) => {\n  if (deactivator) {\n    form.classList.add('ad-form--disabled');\n\n  } else {\n    form.classList.remove('ad-form--disabled');\n  }\n\n  formFieldSets.forEach((fieldSet) => { // все поля формы делаются неактивными deactivator = true\n    fieldSet.disabled = deactivator;\n  });\n};\n\naddressInput.readOnly = true; // делаем поле адреса только для чтения\nsynchronizeSelectors(entrySelector, departureSelector); // синхронизация времён въезда и выезда\n\nexport {form, titleInput, housingTypeSelector, priceInput, formResetButton};\n","const PriceRangeName = {\n  ANY: 'any',\n  LOW: 'low',\n  MIDDLE: 'middle',\n  HIGH: 'high',\n}\n\nconst PriceRangeLimit = {\n  LOW: 10000,\n  HIGH: 50000,\n}\n\nconst filterForm = document.querySelector('.map__filters');\nconst filters = filterForm.querySelectorAll('select, fieldset');\n\nconst deactivateFilters = (deactivator) => { // деактивируется форма фильтров deactivator = true\n  if (deactivator) {\n    filterForm.classList.add('map__filters--disabled');\n  } else {\n    filterForm.classList.remove('map__filters--disabled');\n  }\n\n  filters.forEach((filter) => { // деактивируются все фильтры при deactivator = true\n    filter.disabled = deactivator;\n  });\n}\n\nconst changeHousingType = (estateObject) => { // проверка совпадения estateObject-та с выбранным типом жилья\n  const housingType = filterForm.querySelector('#housing-type option:checked').value; // текущий параметр типа жилья\n  return housingType === estateObject.offer.type || housingType === 'any';\n};\n\nconst changePriceRange = (estateObject) => { // проверка попадания estateObject-та в выбранный диапазон цен\n  const housingPrice = filterForm.querySelector('#housing-price option:checked').value; // текущий параметр диапазона цен из селектора\n  let indicator = false;\n  switch (housingPrice) {\n    case PriceRangeName.ANY:\n      indicator = true;\n      break;\n    case PriceRangeName.LOW:\n      indicator = (estateObject.offer.price <= PriceRangeLimit.LOW);\n      break;\n    case PriceRangeName.MIDDLE:\n      indicator = (estateObject.offer.price > PriceRangeLimit.LOW && estateObject.offer.price < PriceRangeLimit.HIGH);\n      break;\n    case PriceRangeName.HIGH:\n      indicator = (estateObject.offer.price >= PriceRangeLimit.HIGH);\n  }\n  return indicator;\n};\n\nconst changeHousingRooms = (estateObject) => { // проверка в estateObject-те выбранного количества комнат\n  const housingRooms = filterForm.querySelector('#housing-rooms option:checked').value; // текущий параметр количества комнат\n  return estateObject.offer.rooms === parseInt(housingRooms, 10) || housingRooms === 'any';\n};\n\nconst changeHousingGuests = (estateObject) => { // проверка в estateObject-те выбранного количества гостей\n  const housingGuests = filterForm.querySelector('#housing-guests option:checked').value; // текущий параметр количества гостей\n  return estateObject.offer.guests === parseInt(housingGuests, 10) || housingGuests === 'any';\n};\n\nconst facilitiesChangeHandler = (estateObject) => { // проверка наличия в estateObject-те выбранных удобств\n  const facilitiesArray = filterForm.querySelectorAll('#housing-features input'); // массив опций удобств\n  let indicator = true;\n  for (let i = 0; i < facilitiesArray.length; i++) { // цикл проходит по всем элементам массива опций удобств\n    if (facilitiesArray[i].checked && !estateObject.offer.features.includes(facilitiesArray[i].value)) { // если удобство чекнуто И его нет в estateObject-те, то...\n      indicator = false;\n      break;\n    }\n  }\n  return indicator;\n};\n\nconst filterEstateObjects = (cb, dataToFilter) => { // фильтрует данных с сервера\n  filterForm.addEventListener('change', () => {\n    const filteredOffers = dataToFilter.filter((estateObject) => {\n      return changeHousingType(estateObject) &&\n             changePriceRange(estateObject) &&\n             changeHousingRooms(estateObject) &&\n             changeHousingGuests(estateObject) &&\n             facilitiesChangeHandler(estateObject);\n    });\n    cb(filteredOffers);\n  });\n};\n\nexport {deactivateFilters, filterEstateObjects};\n","import {deactivateFilters} from './filter.js';\nimport {deactivateForm} from './form.js';\n\nconst deactivatePage = (deactivator) => { // функция активации и деактивации страницы, при deactivator = true деактивирует, при deactivator = false активирует\n  deactivateForm (deactivator);\n  deactivateFilters(deactivator);\n};\n\ndeactivatePage(true);\nexport {deactivatePage};\n","/* global L:readonly */\nimport {deactivatePage} from './page-activation.js';\nimport {TokyoCenterView} from './util.js';\nimport {renderCard} from './card.js';\nimport {setAddress} from './form.js';\n\nconst ESTATE_OBJECTS_NUMBER = 10;\nconst ARRAY_INITIAL_ELEMENT_INDEX = 0;\n\nconst map = L.map('map-canvas')\n  .on('load', () => {\n    deactivatePage(false) // делаем страницу активной\n  })\n  .setView({\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  }, TokyoCenterView.ZOOM);\n\nL.tileLayer(\n  'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n).addTo(map);\n\nconst mainPinIcon = L.icon({ // создание иконки для главной метки\n  iconUrl: './img/main-pin.svg',\n  iconSize: [52, 52],\n  iconAnchor: [26, 52],\n});\n\nconst mainPinMarker = L.marker(\n  {\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  },\n  {\n    draggable: true,\n    icon: mainPinIcon,\n  },\n);\n\nexport const resetMainPinPosition = () => {\n  mainPinMarker.setLatLng({\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  });\n  map.setView({\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  }, TokyoCenterView.ZOOM);\n};\n\nmainPinMarker.addTo(map); // отрисовка главной метки\n\nsetAddress(TokyoCenterView.LATITUDE, TokyoCenterView.LONGITUDE);\n\nmainPinMarker.on('move', (evt) => { // передача координат главной метки в поле адреса после перемещения\n  const MainMarkerCoordinates = {\n    LATITUDE: evt.target.getLatLng().lat,\n    LONGITUDE: evt.target.getLatLng().lng,\n    SIGNS_NUMBER: 5,\n  }\n  const formAddressLatitude = Math.round(MainMarkerCoordinates.LATITUDE * 10 ** MainMarkerCoordinates.SIGNS_NUMBER) / 10 ** MainMarkerCoordinates.SIGNS_NUMBER;\n  const formAddressLongitude = Math.round(MainMarkerCoordinates.LONGITUDE * 10 ** MainMarkerCoordinates.SIGNS_NUMBER) / 10 ** MainMarkerCoordinates.SIGNS_NUMBER;\n  setAddress(formAddressLatitude, formAddressLongitude);\n});\n\nconst PinIcon = L.icon({ // создание иконок для меток, кроме главной\n  iconUrl: './img/pin.svg',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n});\n\nconst pinsLayerGroup = L.layerGroup() // создаём группу слоёв, куда будут добавляться все маркеры, кроме основного\n  .addTo(map);                      // добавляем группу слоёв на карту\n\nconst renderPins = (estateObjects) => { // отрисовка меток, кроме главной\n\n  if (pinsLayerGroup.getLayers().length) { // если группа слоев содержит не пустой массив, то...\n    pinsLayerGroup.clearLayers(); // затираются все ранее созданные метки\n  }\n\n  estateObjects.slice(ARRAY_INITIAL_ELEMENT_INDEX, ESTATE_OBJECTS_NUMBER).forEach((element) => {\n    const PinMarker = L.marker(\n      {\n        lat: element.location.lat,\n        lng: element.location.lng,\n      },\n      {\n        icon: PinIcon,\n      },\n    );\n\n    PinMarker\n      .bindPopup(    // вызов попапа карточки объекта\n        renderCard(element),\n      );\n\n    pinsLayerGroup\n      .addLayer(PinMarker);\n  })\n}\n\nexport {TokyoCenterView, renderPins, map};\n","import {form} from './form.js'\n\nconst FILE_TYPES = ['gif', 'jpg', 'jpeg', 'png'];\nconst avatarFileChooser = form.querySelector('.ad-form__field input[type=file]');\nconst avatarPreview = form.querySelector('.ad-form-header__preview img');\nconst housingFileChooser = form.querySelector('.ad-form__upload input[type=file]');\nconst housingPreviewBlock = form.querySelector('.ad-form__photo');\n\navatarFileChooser.addEventListener('change', () => {\n\n  const file = avatarFileChooser.files[0];\n  const fileName = file.name.toLowerCase();\n\n  const matches = FILE_TYPES.some((ending) => {\n    return fileName.endsWith(ending);\n  });\n\n  if (matches) {\n    const reader = new FileReader();\n\n    reader.addEventListener('load', () => {\n      avatarPreview.src = reader.result;\n    });\n    reader.readAsDataURL(file);\n  }\n});\n\nhousingFileChooser.addEventListener('change', () => {\n\n  const file = housingFileChooser.files[0];\n  const fileName = file.name.toLowerCase();\n\n  const matches = FILE_TYPES.some((ending) => {\n    return fileName.endsWith(ending);\n  });\n\n  if (matches) {\n    let reader = new FileReader();\n\n    reader.addEventListener('load', () => {\n      housingPreviewBlock.innerHTML = `<img src=\"${reader.result}\" alt=\"Фото жилья\" width=\"70\" height=\"70\"></img>`;\n    });\n    reader.readAsDataURL(file);\n  }\n});\n","const getData = (onSuccess, onError) => { // получение данных с сервера\n  fetch('https://22.javascript.pages.academy/keksobooking/data')\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error(`${response.status} (${response.statusText}).`);\n    })\n    .then((data) => {\n      onSuccess(data);\n    })\n    .catch((err) => {\n      onError(err);\n    })\n};\n\nconst sendData = (onSuccess, onError, data) => {\n  fetch('https://22.javascript.pages.academy/keksobooking',\n    {\n      method: 'POST',\n      body: data,\n    },\n  )\n    .then((response) => {\n      if (response.ok) {\n        onSuccess();\n      } else {\n        onError(`${response.status} (${response.statusText}).`);\n      }\n    })\n    .catch((err) => {\n      onError(err);\n    })\n};\n\nexport {getData, sendData};\n","/* global _:readonly */\nimport {showErrorMessage} from './util.js';\nimport './card.js';\nimport {handleFormSubmission, setFormResetHandler} from  './form.js';\nimport './page-activation.js';\nimport {filterEstateObjects} from './filter.js';\nimport {resetMainPinPosition, renderPins} from './map.js';\nimport {getData} from './server.js';\nimport './photo.js';\n\nconst FILTER_SWITCH_DELAY = 500; // задержка для дебаунса фильтров\n\nhandleFormSubmission(resetMainPinPosition);\nsetFormResetHandler(resetMainPinPosition);\ngetData(                                     // отрисовка меток по данным с сервера или сообщения об ошибке\n  (data) => {\n    renderPins(data);                       // отрисовка меток по данным с сервера\n    filterEstateObjects(_.debounce(renderPins, FILTER_SWITCH_DELAY), data);   // отрисовка меток при применении фильтров с задержкой debounce\n  },\n  showErrorMessage,                         // отрисовка сообщения об ошибке\n);\n"],"sourceRoot":""}